!function(){var e=window.jwplayer("container");window.CastProviderJS=function(e,t){var i=CastProviderJS.prototype,n=void 0,r=NativeCastProvider,a=e;i.load=function(e){this.init(e)},i.setPlayWhenReady=function(e){this.playWhenReady=e},i.init=function(e){n!==e&&(void 0!==n&&(a.getPlugin("casting").isResume=!1),n=e,this.setCastMediaItem(e))},i.setCastMediaItem=function(e){var t=a.getPlugin("casting").isResume,i=JSON.stringify(e);if(t){var n=a.getPlugin("casting").playlistIndex;a.set("item",n)}var o=a.get("item"),s=a.get("currentTime");"complete"===a.get("state")&&(o=0,s=0),r.setCastMediaItem(i,o,s,t)},i.loadComplete=function(){a.set("itemReady",!0),a.set("volume",Math.round(100*r.getVolume())),a.set("mute",r.isMuted()),a.trigger("levels",{levels:this.getQualityLevels(),currentQuality:0}),a.trigger("audioTracks",{tracks:[],currentTrack:-1}),this.play(),this.pause()},i.play=function(){return r.play(),Promise.resolve()},i.pause=function(){r.pause()},i.seek=function(e){if(this.setState("buffering"),a.trigger("seek",{position:this.getPosition()/1e3,offset:e}),e<0){e+=this.getSeekRange()}r.seek(e)},i.stop=function(){r.stop()},i.mute=function(e){r.mute(e)},i.volume=function(e){r.volume(e)},i.next=function(){r.next()},i.getPosition=function(){return r.getPosition()},i.getDuration=function(){return r.getDuration()},i.getSeekRange=function(){return r.getDuration()},i.destroy=function(){},i.getName=function(){return CastProviderJS.getName()},i.getQualityLevels=function(){return[{label:"Auto"}]},i.setState=function(e){a.set("state",e)},i.triggerSeeked=function(){a.trigger("seeked",{position:this.getPosition()/1e3})},i.triggerVolumeChanged=function(e){a.set("volume",Math.round(100*e))},i.triggerPlaybackRateChanged=function(e){a.set("playbackRate",e)},i.triggerTime=function(e,t,i){var n=Number.parseInt(e),r=Number.parseInt(t);if(Number.isFinite(e)){var o=Math.abs(n),s={position:n,duration:r,currentTime:o,seekRange:i,metadata:{currentTime:o}};a.trigger("time",s)}}},CastProviderJS.supports=function(e){return!1},CastProviderJS.getName=function(){return{name:"CastProviderJS"}},Object.assign(CastProviderJS.prototype,e.Events),jwplayer.api.registerProvider(CastProviderJS)}();
